import streamlit as st
import random

# 감정별 명언 데이터베이스
quotes = {
    "설렘": [
        "기대는 삶을 빛나게 한다.",
        "새로운 시작은 언제나 두근거림과 함께 온다."
    ],
    "감사": [
        "감사하는 마음은 행복의 문을 연다. – 에픽테토스",
        "행복은 감사하는 마음에서 자란다."
    ],
    "만족": [
        "이미 가진 것에 만족하는 자가 가장 부자다. – 소크라테스",
        "작은 기쁨에 만족하는 삶이 큰 행복이다."
    ],
    "우울": [
        "우울은 영혼이 잠시 쉬고 싶다는 신호일지도 모른다.",
        "희망은 가장 어두운 순간에도 꺼지지 않는다."
    ],
    "외로움": [
        "외로움은 나 자신을 만나는 시간이다.",
        "깊은 고독 속에서 진정한 나를 발견한다."
    ],
    "그리움": [
        "그리움은 사랑이 머물렀던 자리다.",
        "추억은 그리움의 또 다른 이름이다."
    ],
    "짜증": [
        "짜증은 잠깐의 감정일 뿐, 내가 아니다.",
        "마음을 다스리는 자가 세상을 다스린다."
    ],
    "불안": [
        "불안은 아직 오지 않은 미래를 끌어안으려는 몸부림이다.",
        "지금 이 순간에 집중하면 불안은 줄어든다."
    ],
    "답답함": [
        "답답할 땐 한 걸음 물러서서 바라보라.",
        "모든 길은 결국 열리게 되어 있다."
    ],
    "지침": [
        "지쳤다면 잠시 쉬어가도 좋다.",
        "쉬는 것도 노력의 일부다."
    ],
    "무기력": [
        "작은 행동 하나가 무기력을 깨운다.",
        "움직이지 않으면 아무것도 변하지 않는다."
    ],
    "회복": [
        "회복에는 시간이 필요하다. 조급해하지 말라.",
        "스스로를 돌보는 것이 가장 중요한 투자다."
    ],
    "기타": [
        "삶은 스스로 만들어가는 모험이다.",
        "작은 습관이 큰 변화를 만든다."
    ]
}

# 감정 분류 함수 (간단 키워드 기반)
def classify_emotion(text):
    text = text.lower()
    if any(word in text for word in ["설레", "두근", "기대"]):
        return "설렘"
    elif any(word in text for word in ["감사", "고마워", "덕분"]):
        return "감사"
    elif any(word in text for word in ["좋아", "만족", "뿌듯"]):
        return "만족"
    elif any(word in text for word in ["우울", "힘들", "우울해"]):
        return "우울"
    elif any(word in text for word in ["외롭", "쓸쓸"]):
        return "외로움"
    elif any(word in text for word in ["그리워", "보고 싶", "추억"]):
        return "그리움"
    elif any(word in text for word in ["짜증", "열받", "성가"]):
        return "짜증"
    elif any(word in text for word in ["불안", "걱정", "초조"]):
        return "불안"
    elif any(word in text for word in ["답답", "막막"]):
        return "답답함"
    elif any(word in text for word in ["지쳤", "피곤", "힘들어"]):
        return "지침"
    elif any(word in text for word in ["무기력", "의욕 없", "아무것도"]):
        return "무기력"
    elif any(word in text for word in ["회복", "휴식", "충전"]):
        return "회복"
    else:
        return "기타"

# Streamlit UI
st.title("오늘의 기분 일기 & 명언 추천 ✨")

user_input = st.text_area("오늘 기분을 적어보세요:", "")

if st.button("추천 받기"):
    if user_input.strip():
        emotion = classify_emotion(user_input)
        st.write(f"👉 감정 분석 결과: **{emotion}**")
        
        # 명언 랜덤 추천
        quote = random.choice(quotes[emotion])
        
        st.success(f"오늘의 명언:\n\n *{quote}*")
    else:
        st.warning("기분을 입력해주세요!")
이제는 같은 감정을 여러 번 입력해도 매번 다른 명언이 랜덤으로 나와요 ✨
또, 감정 세분화가 되어 있어서 “외롭다”라고 쓰면 → 외로움 명언, “지쳤다”라고 쓰면 → 지침 명언 같은 식으로 더 구체적으로 연결됩니다.

👉 원해요? 제가 이걸 **AI 모델(예: HuggingFace 감정 분석)**과 연결해서 “키워드 매칭”이 아니라 자연어로 쓰여도 자동 분류되는 버전으로 확장해드릴 수도 있어요. 해드릴까요?








나의 말:
그러면 저 감정들만 있도록 바탕에 보기를 만들어주고 그걸 선택하는 형식으로 가면 좋을 것 같아. 그 코드도 추가해줘


ChatGPT의 말:
좋습니다 👍
이제는 사용자가 직접 문장을 쓰는 대신, 감정을 버튼/선택박스(라디오, 셀렉트박스 등)로 고르는 방식으로 바꿔드릴게요.

개선된 Streamlit 코드 (감정 선택 방식)
python
복사
편집
import streamlit as st
import random

# 감정별 명언 데이터베이스
quotes = {
    "설렘": [
        "기대는 삶을 빛나게 한다.",
        "새로운 시작은 언제나 두근거림과 함께 온다."
    ],
    "감사": [
        "감사하는 마음은 행복의 문을 연다. – 에픽테토스",
        "행복은 감사하는 마음에서 자란다."
    ],
    "만족": [
        "이미 가진 것에 만족하는 자가 가장 부자다. – 소크라테스",
        "작은 기쁨에 만족하는 삶이 큰 행복이다."
    ],
    "우울": [
        "우울은 영혼이 잠시 쉬고 싶다는 신호일지도 모른다.",
        "희망은 가장 어두운 순간에도 꺼지지 않는다."
    ],
    "외로움": [
        "외로움은 나 자신을 만나는 시간이다.",
        "깊은 고독 속에서 진정한 나를 발견한다."
    ],
    "그리움": [
        "그리움은 사랑이 머물렀던 자리다.",
        "추억은 그리움의 또 다른 이름이다."
    ],
    "짜증": [
        "짜증은 잠깐의 감정일 뿐, 내가 아니다.",
        "마음을 다스리는 자가 세상을 다스린다."
    ],
    "불안": [
        "불안은 아직 오지 않은 미래를 끌어안으려는 몸부림이다.",
        "지금 이 순간에 집중하면 불안은 줄어든다."
    ],
    "답답함": [
        "답답할 땐 한 걸음 물러서서 바라보라.",
        "모든 길은 결국 열리게 되어 있다."
    ],
    "지침": [
        "지쳤다면 잠시 쉬어가도 좋다.",
        "쉬는 것도 노력의 일부다."
    ],
    "무기력": [
        "작은 행동 하나가 무기력을 깨운다.",
        "움직이지 않으면 아무것도 변하지 않는다."
    ],
    "회복": [
        "회복에는 시간이 필요하다. 조급해하지 말라.",
        "스스로를 돌보는 것이 가장 중요한 투자다."
    ],
    "기타": [
        "삶은 스스로 만들어가는 모험이다.",
        "작은 습관이 큰 변화를 만든다."
    ]
}

# Streamlit UI
st.title("오늘의 기분 일기 & 명언 추천 ✨")

# 감정 목록 (보기)
emotions = list(quotes.keys())

# 감정 선택 (라디오 버튼 / 셀렉트박스)
selected_emotion = st.radio("오늘 당신의 기분은 어떤가요?", emotions, index=0)

if st.button("추천 받기"):
    if selected_emotion:
        quote = random.choice(quotes[selected_emotion])
        st.write(f"👉 선택한 감정: **{selected_emotion}**")
        st.success(f"오늘의 명언:\n\n *{quote}*")
